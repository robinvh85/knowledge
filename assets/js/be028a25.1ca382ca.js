"use strict";(self.webpackChunkknowledge=self.webpackChunkknowledge||[]).push([[766],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=i,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(f,a(a({ref:t},c),{},{components:n})):r.createElement(f,a({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var p=2;p<o;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9646:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(7462),i=(n(7294),n(3905));const o={},a="Asset pipeline",l={unversionedId:"rails/asset-pipeline",id:"rails/asset-pipeline",title:"Asset pipeline",description:"- Asset pipeline is used to handle client-side code in Rails applications",source:"@site/docs/rails/asset-pipeline.md",sourceDirName:"rails",slug:"/rails/asset-pipeline",permalink:"/knowledge/docs/rails/asset-pipeline",draft:!1,editUrl:"https://github.com/robinvh85/knowledge/tree/main/docs/rails/asset-pipeline.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ActiveRecord",permalink:"/knowledge/docs/rails/active-record"},next:{title:"Sprockets - Errors",permalink:"/knowledge/docs/rails/sprockets-errors"}},s={},p=[{value:"The old way to handle client-side code",id:"the-old-way-to-handle-client-side-code",level:2},{value:"Convension for pipeline on Rails",id:"convension-for-pipeline-on-rails",level:2},{value:"Sprockets gem",id:"sprockets-gem",level:2},{value:"Importmap",id:"importmap",level:2},{value:"Reference",id:"reference",level:2}],c={toc:p};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"asset-pipeline"},"Asset pipeline"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Asset pipeline is used to handle client-side code in Rails applications")),(0,i.kt)("h2",{id:"the-old-way-to-handle-client-side-code"},"The old way to handle client-side code"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"We typically had to put all of our assets in the public folder. Usually we ended up with a lot of files and it became difficult to know if they are being used or not.")),(0,i.kt)("h2",{id:"convension-for-pipeline-on-rails"},"Convension for pipeline on Rails"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Our assets live in the ",(0,i.kt)("inlineCode",{parentName:"li"},"app/assets")," folder, and there are also ",(0,i.kt)("inlineCode",{parentName:"li"},"lib/assets")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"vendor/assets")," folders"),(0,i.kt)("li",{parentName:"ul"},"Assets are compiled on-the-fly in development and need to be precompiled in production"),(0,i.kt)("li",{parentName:"ul"},"We also have asset fingerprinting so the digest of the asset content becomes part of the filename itself to provide automatic cache busting.")),(0,i.kt)("h2",{id:"sprockets-gem"},"Sprockets gem"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Sprockets makes it possible to compile and serve all assets. Sprockets defines a processor pipeline so you can extend the way your assets are processed."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/rails/sprockets/blob/main/guides/how_sprockets_works.md"},"How sprockets works"))),(0,i.kt)("h2",{id:"importmap"},"Importmap"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"File config: ",(0,i.kt)("inlineCode",{parentName:"li"},"config/importmap.rb")),(0,i.kt)("li",{parentName:"ul"},"Import maps let you import JavaScript modules using logical names that map to versioned/digested files \u2013 directly from the browser."),(0,i.kt)("li",{parentName:"ul"},"So you can build modern JavaScript applications using JavaScript libraries made for ES modules (ESM) without the need for transpiling or bundling. "),(0,i.kt)("li",{parentName:"ul"},"This frees you from needing Webpack, Yarn, npm, or any other part of the JavaScript toolchain.")),(0,i.kt)("h2",{id:"reference"},"Reference"))}d.isMDXComponent=!0}}]);